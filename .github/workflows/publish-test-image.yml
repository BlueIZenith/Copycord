name: Build & publish TEST container

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: "Image repo name (e.g., copycord-beta or copycord-test)"
        required: true
        default: "copycord-beta"
      version:
        description: "Version/tag to publish (e.g., scraper-test, v1.2.3-beta.1)"
        required: true
        default: "scraper-test"
      rolling_tag:
        description: "Optional rolling tag to also apply (e.g., test, beta, rc) â€” leave blank to skip"
        required: false
        default: "test"
      add_sha_tag:
        description: "Also tag with rolling-<short_sha> (helps parallel testing)"
        type: boolean
        required: false
        default: true
      context:
        description: "Build context"
        required: false
        default: "."
      dockerfile:
        description: "Dockerfile path"
        required: false
        default: "./code/Dockerfile"
      platforms:
        description: "Target platforms"
        required: false
        default: "linux/amd64,linux/arm64"

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive lower-case owner
        id: vars
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Compute image tags (no :latest ever)
        id: meta
        shell: bash
        run: |
          OWNER='${{ steps.vars.outputs.owner }}'
          IMAGE_NAME='${{ github.event.inputs.image_name }}'
          VERSION_RAW='${{ github.event.inputs.version }}'
          ROLLING='${{ github.event.inputs.rolling_tag }}'
          ADD_SHA='${{ github.event.inputs.add_sha_tag }}'

          IMAGE="ghcr.io/${OWNER}/${IMAGE_NAME}"

          # Allow users to type 1.2.3 or 1.2.3-beta.1; prefix v for consistency
          VERSION="${VERSION_RAW}"
          if [[ "${VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
            VERSION="v${VERSION}"
          fi

          TAGS="${IMAGE}:${VERSION}"   # exact version/tag
          if [[ -n "${ROLLING}" ]]; then
            TAGS="${TAGS}
${IMAGE}:${ROLLING}"
          fi

          if [[ "${ADD_SHA}" == "true" ]]; then
            SHORT_SHA="${GITHUB_SHA::7}"
            SAFE_ROLLING="${ROLLING:-test}"
            TAGS="${TAGS}
${IMAGE}:${SAFE_ROLLING}-${SHORT_SHA}"
          fi

          echo "Computed tags:"
          echo "${TAGS}"

          {
            echo "tags<<EOF"
            echo "${TAGS}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.event.inputs.context }}
          file: ${{ github.event.inputs.dockerfile }}
          platforms: ${{ github.event.inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
